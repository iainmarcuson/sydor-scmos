# This is a comma-delimited file of Area Detector parameters
# PV Name, ASYN Param Name, ASYN Param Type, Parameter Variable Name, Parameter String Name, Boolean Pre-existing, Boolean PV Inhibit, DataViewer String
# Pre-existing is true if the variable already exists in base classes of AreaDetector, or false if a new variable is being created.
# PV Inhibit will inhibit generation of a PV.  This is primarily intended for mbbo-type PVs, that do not lend themselves to automatic generation.  This is independent of Pre-existing, as one may want to override a PV
$(P)$(R)AcquireTime, ACQ_TIME, d, ADAcquireTime, ADAcquireTimeString, 1, 1, "IntegTime"
$(P)$(R)TriggerMode, TRIGGER_MODE, i32, ADTriggerMode, ADTriggerModeString, 1, 1, "Trigger"
$(P)$(R)NumImages, NIMAGES, i32, ADNumImages, ADNumImagesString, 1, 1, "NImages"
$(P)$(R)ShutterMode, SHUTTER_MODE, i32, ADShutterMode, ADShutterModeString, 1, 1, "Shutter"
$(P)$(R)InterframeTime, SD_INTERFRAME_TIME, d, SDInterframeTime, SDInterframeTimeString, 0, 0, "Interframe"
$(P)$(R)NumFrames, SD_NUM_FRAMES, i32, SDNumFrames, SDNumFramesString, 0, 0, "NFrames"
$(P)$(R)SensorPower, SD_SENSOR_POWER, i32, SDSensorPower, SDSensorPowerString, 0, 1, ""
$(P)$(R)LinkStatus, SD_LINK_STATUS, i32, SDLinkStatus, SDLinkStatusString, 0, 0, ""
$(P)$(R)ReverseX, REVERSE_X, i32, ADReverseX, ADReverseXString, 1, 1, "HFlip"
$(P)$(R)ReverseY, REVERSE_Y, i32, ADReverseY, ADReverseYString, 1, 1, "VFlip"
$(P)$(R)DSNU, SD_DSNU, i32, SDDSNUMode, SDDSNUString, 0, 1, "DSNU"
$(P)$(R)PRNU, SD_PRNU, i32, SDPRNUMode, STPRNUString, 0, 1, "PRNU"
$(P)$(R)RunName, SD_RUN_NAME, s, SDRunName, SDRunNameString, 0, 0, "RunName"
$(P)$(R)SetName, SD_SET_NAME, s, SDSetName, SDSetNameString, 0, 0, "SetName"
$(P)$(R)StartTrig, SD_START_TRIG, i32, SDStartTrig, SDStartTrigString, 0, 0, "actionTrigger"
$(P)$(R)MinX, MIN_X, i32, ADMinX, ADMinXString, 1, 1, "@AcqROI"
$(P)$(R)MinY, MIN_Y, i32, ADMinY, ADMinYString, 1, 1, "@AcqROI"
$(P)$(R)SizeX, SIZE_X, i32, ADSizeX, ADSizeXString, 1, 1, "@AcqROI"
$(P)$(R)SizeY, SIZE_Y, i32, ADSizeY, ADSizeYString, 1, 1, "@AcqROI"
$(P)$(R)EnableRegion, SD_ENABLE_ROI, i32, SDEnableROI, SDEnableROIString, 0, 0, "@AcqROI"
$(P)$(R)StartCapture, SD_START_CAPTURE, i32, SDStartCapture, SDStartCaptureString, 0, 0, "actionCapture"
$(P)$(R)CaptureMode, SD_CAPTURE_MODE, i32, SDCaptureMode, SDCaptureModeString, 0, 1, "CaptureMode"
$(P)$(R)Binning, SD_BINNING, i32, SDBinMode, SDBinModeString, 0, 1, "Resolution"
$(P)$(R)GainMode, SD_GAIN_MODE, i32, SDGainMode, SDGainModeString, 0, 1, "Mode"
$(P)$(R)CorGeoEn, SD_GEOCORRECT_EN, i32, SDGeoCorEn, SDGeoCorEnString, 0, 1, "@COR_GEOCORRECT"
$(P)$(R)CorRotEn, SD_COR_ROT_EN, i32, SDCorRotEn, SDCorRotEnString, 0, 1, "@COR_ROTATE"
$(P)$(R)CorRotTheta, SD_COR_ROT_THETA, d, SDCorRotTheta, SDCorRotThetaString, 0, 0, "@COR_ROTATE"
$(P)$(R)InTrigEdge, SD_IN_TRIG_EDGE, i32, SDInTrigEdge, SDInTrigEdgeString, 0, 1, "InputTriggerEdge"
$(P)$(R)OutTrigEdge, SD_OUT_TRIG_EDGE, i32, SDOutTrigEdge, SDOutTrigEdgeString, 0, 1, "OutputEdge"
$(P)$(R)OutTrigMode, SD_OUT_TRIG_MODE, i32, SDOutTrigMode, SDOutTrigModeString, 0, 1, "OutputTrigger"
$(P)$(R)GUIRefresh, SD_GUI_REFRESH, i32, SDGUIRefresh, SDGUIRefreshString, 0, 0, "*"
$(P)$(R)Temperature, TEMPERATURE, d, ADTemperature, ADTemperatureString, 1, 1, "Temperature"
$(P)$(R)AccumulateMode, SD_ACCUMULATE_MODE, i32, SDAccumulateMode, SDAccumulateModeString, 0, 1, "AccumulateMode"
$(P)$(R)ReadoutMode, SD_READOUT_MODE, i32, SDReadoutMode, SDReadoutModeString, 0, 1, "ReadoutMode"
#The overscan subtraction takes two arguments, but one of them is dummied out
$(P)$(R)CorOverscanSubEn, SD_COR_OVER_EN, i32, SDCorOverscanSubEn, SDOverscanSubEnString, 0, 1, "@COR_OVERSCAN"
$(P)$(R)CorOverscanSubAmt, SD_COR_OVER_AMT, i32, SDCorOverscanSubAmt, SDOverscanSubAmtString, 0, 0, "@COR_OVERSCAN"
#The image assembly takes two arguments, but one of them is dummied out
$(P)$(R)CorAssembleEn, SD_COR_ASSEMBLE_EN, i32, SDCorAssembleEn, SDCorAssembleEnString, 0, 1, "@COR_ASSEMBLE"
$(P)$(R)CorAssembleArg, SD_COR_ASSEMBLE_ARG, i32, SDCorAssembleArg, SDCorAssembleArgString, 0, 0, "@COR_ASSEMBLE"
$(P)$(R)VideoMode, SD_VID_MODE, i32, SDVideoMode, SDVideoModeString, 0, 1, "Video"
$(P)$(R)CBAMode, SD_CBA_MODE, i32, SDCBAMode, SDCBAModeString, 0, 1, "ClearBeforeAcquire"
$(P)$(R)CorHPREn, SD_COR_HPR_EN, i32, SDCorHPREn, SDCorHPREnString, 0, 1, "@COR_HPR"
$(P)$(R)CorHPRRatio, SD_COR_HPR_RATIO, d, SDCorHPRRatio, SDCorHPRRatioString, 0, 0, "@COR_HPR"
$(P)$(R)ImageMode, IMAGE_MODE, i32, ADImageMode, ADImageModeString, 1, 1, "AcquireMode"
